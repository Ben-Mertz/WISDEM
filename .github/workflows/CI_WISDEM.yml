name: CI_WISDEM

# We run CI on push commits and pull requests on all branches
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build (${{ matrix.os }} Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}

    defaults:
        run:
            shell: bash -el {0}

    strategy:
      fail-fast: False
      matrix:
        os: [ubuntu-latest, windows-latest] #macos-latest, 
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      #- name: Setup GNU Fortran
      #  uses: modflowpy/install-gfortran-action@v1
        
      - name: checkout repository
        uses: actions/checkout@v3

      #- name: Install mamba
      #  uses: mamba-org/setup-micromamba@v1
      #  # https://github.com/mamba-org/setup-micromamba
      #  with:
      #      environment-file: environment.yml
      #      environment-name: wisdem-actions
      #      init-shell: bash powershell
      #      post-cleanup: 'all'
      - name: Install conda/mamba
        uses: conda-incubator/setup-miniconda@v2
        # https://github.com/marketplace/actions/setup-miniconda
        with:
          #miniforge-variant: Mambaforge
          #miniforge-version: "latest"
          #mamba-version: "*"
          channels: conda-forge
          channel-priority: true          
          #auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yml
          activate-environment: test
          auto-activate-base: false

      # Install dependencies of WEIS specific to ubuntu
      - name: Add dependencies ubuntu specific
        if: false == contains( matrix.os, 'windows')
        run: |
          conda install -y petsc4py gfortran

      # Install dependencies of WISDEM specific to windows
      - name: Add dependencies windows specific
        if: contains( matrix.os, 'windows')
        run: |
          conda install -y m2w64-toolchain libpython

      - name: Debug config
        run: |
          conda list
          which -a gfortran
          which pip

      # Install WISDEM with setup
      #- name: Install WISDEM with setup
      #  run: |
      #    python setup.py install

      # Install WISDEM with pip
      - name: Install WISDEM with pip for Unix
        if: false == contains( matrix.os, 'windows')
        run: |
          python setup.py install

      # Install WISDEM with pip
      - name: Install WISDEM with pip for Windows
        if: contains( matrix.os, 'windows')
        run: |
            python setup.py install
    
      # Debugging session
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3

      # Run all tests
      - name: Run tests
        if: false == contains( matrix.os, 'windows')
        run: |
          pytest -p no:warnings --disable-warnings --cov=wisdem

      # Run limited test on WINDOWS
      - name: Limited Windows test
        if: contains( matrix.os, 'windows')
        run: |
          cd wisdem/test/test_gluecode
          pytest  -p no:warnings --disable-warnings test_g*

      # Run coveralls
      - name: Run coveralls
        if: contains( matrix.os, 'ubuntu')
        # This also works, https://github.com/AndreMiras/coveralls-python-action
        #uses: AndreMiras/coveralls-python-action@develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coveralls --service=github
